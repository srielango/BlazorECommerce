@page "/checkout"
@inject ICartService CartService
@inject NavigationManager Navigation
@inject AuthenticationStateProvider authProvider

@rendermode InteractiveServer

@if (!(authProvider as CustomAuthenticationStateProvider).IsLoggedIn)
{
    Navigation.NavigateTo("/login");
}
else if (!CartService.GetCartItems().Any())
{
    <MudAlert Severity="Severity.Warning" Class="mt-4">
    Your cart is empty. Please add items to your cart before proceeding to checkout.
    </MudAlert>
}
else
{
    <MudPaper Class="pa-4">
        <h3>Review Your Order</h3>

        <MudTable Items="@CartService.GetCartItems()" Hover="true" Dense="true">
            <HeaderContent>
                <MudTh>Product</MudTh>
                <MudTh>Price</MudTh>
                <MudTh>Quantity</MudTh>
                <MudTh>Total</MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd DataLabel="Product">@context.ProductName</MudTd>
                <MudTd DataLabel="Price">@($"${context.Price}")</MudTd>
                <MudTd DataLabel="Quantity">@context.Quantity</MudTd>
                <MudTd DataLabel="Total">@($"${context.TotalPrice}")</MudTd>
            </RowTemplate>
         </MudTable>

         <MudText Typo="Typo.h6" Class="mt-4">
            Total: @($"${CartService.GetCartItems().Sum(item => item.TotalPrice)}")
         </MudText>

        <MudButton Variant="Variant.Filled" Color="Color.Primary" Class="mt-3" OnClick="SubmitOrder">Place Order</MudButton>
        @if (_orderPlaced)
        {
            <MudAlert Severity="Severity.Success" Class="mt-4">
                Your order has been placed successfully! Thank you for shopping with us.
            </MudAlert>
        }
    </MudPaper>
}

@code {
    private bool _orderPlaced = false;

    private void SubmitOrder()
    {
        // Simulate order submission
        CartService.ClearCartAsync();
        _orderPlaced = true;
    }
}
