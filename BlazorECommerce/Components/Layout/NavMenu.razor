@inject ICartService CartService
@inject NavigationManager Navigation

@implements IAsyncDisposable
@inject CartState CartState

@rendermode InteractiveServer

<MudAppBar Elevation="1" Color="Color.Primary">
    <MudText Typo="Typo.h6" Class="ml-2">Blazor E-Commerce</MudText>
    <MudSpacer />
    <MudIconButton Color="Color.Inherit" OnClick="@GoToCart">
        <MudBadge Content="@CartService.GetCartItems().Count()" Color="Color.Error"
                  Class="mr-2" />
        <MudIcon Icon="@Icons.Material.Filled.ShoppingCart" />
    </MudIconButton>
</MudAppBar>

@code {

    protected override void OnInitialized()
    {
        CartState.OnChange += OnCartChanged;
    }

    private void GoToCart()
    {
        Navigation.NavigateTo("/cart");
    }

    private async Task OnCartChanged()
    {
        await InvokeAsync(StateHasChanged);
    }

    public ValueTask DisposeAsync()
    {
        CartState.OnChange -= OnCartChanged;
        return ValueTask.CompletedTask;
    }
}